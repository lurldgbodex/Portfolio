# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI for Portfolio-api

on:
  push:
    branches: 
      - 'main' 
    paths: 
      - 'portfolio-app/Portfolio-backend/**'
  pull_request:
    branches: 
      - 'main'
    paths: 
      - 'portfolio-app/Portfolio-backend/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: checkout repository
      uses: actions/checkout@v4

    - name: wait for mysql to be ready
      run: |
        for i in {30..0}; do
          if docker exec mysql mysql -u $MYSQL_USER -p $MYSQL_PASSWORD -e 'SELECT 1' $MYSQL_DATABASE; then
            echo "MySQL is up and running"
            break
          fi
          echo 'Waiting for MySQL...'
          sleep 1
        done
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file portfolio-app/Portfolio-backend/pom.xml
        
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      with:
        directory: portfolio-app/Portfolio-backend

    - name: Build docker image
      run: docker build -t portfolio-api:v1.0.0 portfolio-app/Portfolio-backend

    - name: Push docker image to hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        docker tag portfolio-api:v1.0.0 $DOCKER_USERNAME/portfolio-api:v1.0.0
        docker push $DOCKER_USERNAME/portfolio-api:v1.0.0

  deploy:
    runs-on: ubuntu-lastest
    needs: build
    
    steps:
    - name: checkout repository
      uses: actions/checkout@v4

    - name: Deploy with docker compose
      run: |
        docker-compose -f portfolio-app/Portfolio-backend/compose.yaml up -d
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  
